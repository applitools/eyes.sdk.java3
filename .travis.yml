language: java

services:
  - docker

jdk: oraclejdk8

dist: trusty

addons:
  apt:
    packages:
      - dpkg # this is required for fixing Travis' invalid chrome version issue
  chrome: stable

# env variables
# $RELEASE_BRANCH
# $GITHUB_TOKEN
# $ALLOWED_RELEASE_COMMITERS
# $SDK
before_script:
  - nvm install 14.5.0
  - nvm use 14.5.0
jobs:
  include:
    - stage: test
      script:
        - google-chrome --version
        - chromium-browser --version
        - latestChromeDriverURL=$(wget http://chromedriver.storage.googleapis.com/LATEST_RELEASE -q -O -)
        - wget "http://chromedriver.storage.googleapis.com/${latestChromeDriverURL}/chromedriver_linux64.zip"
        - unzip chromedriver_linux64.zip -d /home/travis/build/
        - chmod +x /home/travis/build/chromedriver
        - /home/travis/build/chromedriver --version
        - env webdriver.chrome.driver=/home/travis/build/
        - export APPLITOOLS_REPORT_ID=${TRAVIS_COMMIT:0:7}-$TRAVIS_BUILD_NUMBER
        - SDK_VERSION=$(echo $TRAVIS_TAG | sed 's/[^.0-9]*//g')
        - chmod +x ./extractChangeLog.sh
        - TMP_CHANGELOG=$(./extractChangeLog.sh "$SDK_VERSION" "CHANGELOG.md")
        - echo "$TMP_CHANGELOG"
        - CHANGELOG=$([ -z "$TMP_CHANGELOG" ] && echo "ERROR === There is no change log for version $SDK_VERSION" || echo "$TMP_CHANGELOG")
        - echo $CHANGELOG
        - if [[ (-z "$TMP_CHANGELOG") && ($TRAVIS_TAG =~ ^RELEASE_CANDIDATE) ]]; then
          sleep 5;
          exit 1;
          fi
        - if [[ $TRAVIS_TAG =~ ^RELEASE_CANDIDATE ]]; then
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG};
          mvn versions:set -DnewVersion=$SDK_VERSION;
          mvn versions:commit;
          git add */pom.xml pom.xml;
          git commit -m 'update pom version';
          git push origin HEAD:$RELEASE_BRANCH;
          fi
        - if [[ $TRAVIS_TAG =~ ^FULL_COVERAGE_TESTS ]]; then
          sed -i 's/regressionTestsSuite.xml/devTestsSuite.xml/g' $TRAVIS_BUILD_DIR/eyes.selenium.java/pom.xml;
          fi
        - chmod +x ./runTests.sh
        - ./runTests.sh
    - stage: generic
      script:
        - cd generic.tests
        - yarn java
    - stage: deploy
      if: tag =~ ^RELEASE_CANDIDATE AND fork == false
      script:
        #         save the email of the person who did this commit in COMMITTER_EMAIL
        - COMMITTER_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty="%cE")"
        - SDK_VERSION=$(echo $TRAVIS_TAG | sed 's/[^.0-9]*//g')
        - if [[ $COMMITTER_EMAIL =~ $ALLOWED_RELEASE_COMMITERS ]]; then
          echo "DEPLOY";
          chmod +x ./extractChangeLog.sh;
          TMP_CHANGELOG=$(./extractChangeLog.sh "$SDK_VERSION" "CHANGELOG.md");
          CHANGELOG=$([ -z "$TMP_CHANGELOG" ] && echo "There is no change log for version $SDK_VERSION"; echo "$TMP_CHANGELOG");
          echo $CHANGELOG;
          chmod +x ./sendMail.sh;
          TEST_COVERAGE_GAP=$(cat testCoverageGap.txt);
          ./sendMail.sh "$SDK" "$TRAVIS_TAG" "$CHANGELOG" "$TEST_COVERAGE_GAP";
          fi
