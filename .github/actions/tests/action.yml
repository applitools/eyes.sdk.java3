name: Java tests
description: Run Java SDKs tests

inputs:
  working-directory:
    description: the path to the directory from repository root
    type: string
    required: false
  shell:
    description: shell to use
    type: string
    default: bash
    required: false
  module:
    description: module to test (core, appium, selenium, images, playwright, coverage-selenium, coverage-playwright)
    type: string
    required: true
  eg:
    description: Run on EG (Execution Cloud)
    type: boolean
    default: true
    required: true
  report:
    description: report level
    type: string
    default: sandbox
    required: false
  report-id:
    description: report id
    type: string
    default: sandbox
    required: false

runs:
  using: composite
  steps:
    - name: Install dependencies
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        mvn clean install -DskipTests
        echo "UFG_ON_EG=false" >> $GITHUB_ENV

    - name: Start EG
      if: ${{ inputs.eg }}
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        echo "UFG_ON_EG=true" >> $GITHUB_ENV

    - name: Test
      shell: ${{inputs.shell}}
      working-directory: ${{inputs.working-directory}}
      run: |
        if [[ ${{inputs.module}} == *"coverage-selenium"* ]]; then
          cd coverage-tests;
          echo "APPLITOOLS_REPORT_ID=$(git rev-parse HEAD)-selenium" >> $GITHUB_ENV
          chmod +x ./generic_tests.sh;
          ./generic_tests.sh ${{ env.UFG_ON_EG }} "selenium"
        else
          if [[ ${{inputs.module}} == *"coverage-playwright"* ]]; then        
            cd coverage-tests;
            echo "APPLITOOLS_REPORT_ID=$(git rev-parse HEAD)-playwright" >> $GITHUB_ENV
            chmod +x ./generic_tests.sh;
            ./generic_tests.sh ${{ env.UFG_ON_EG }} "playwright"
          else
            echo "APPLITOOLS_REPORT_ID=$(git rev-parse HEAD)-java" >> $GITHUB_ENV
            mvn test -pl ${{inputs.module}} -e -X
          fi
        fi

    - name: Report
      shell: ${{inputs.shell}}
      working-directory: ${{inputs.working-directory}}
      run: |
        if [[ ${{inputs.module}} == *"coverage-selenium"* ]]; then
          cd coverage-tests;
          if [[ ${{inputs.report}} == "deploy" ]]; then
            yarn report:prod-selenium;
          else
            yarn report:selenium;
          fi
          "$(git rev-parse HEAD)"
        else
          if [[ ${{inputs.module}} == *"coverage-playwright"* ]]; then
            cd coverage-tests;
            if [[ ${{inputs.report}} == "deploy" ]]; then
              yarn report:prod-playwright;
            else
              yarn report:playwright;
            fi
          else
            if [ -d "/report" ]; then
              sh sendTestResults.sh
            else
              echo "No report was created"
            fi
          fi
        fi
      env:
        BUILD_DIR: ${{ inputs.working-directory }}
        APPLITOOLS_REPORT_ID: ${{ inputs.report-id || env.APPLITOOLS_REPORT_ID }}