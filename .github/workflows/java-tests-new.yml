name: Java - Test on all platforms
on:
  push:
    branches:
      - bugfix_github_actions
#  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: build
        run: |
          echo "Starting CI Tests"

  core-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Core tests
        run: |
          echo "Starting SDK Core tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "eyes.sdk.core"
#          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  appium-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Appium tests
        run: |
          echo "Starting SDK Appium tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "eyes.appium.java"
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  selenium-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - uses: nanasess/setup-chromedriver@v1
      - name: chromedriver setup windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: chromedriver --url-base=/wd/hub &
      - name: chromedriver setup unix
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Selenium tests
        run: |
          echo "Starting SDK Selenium tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "eyes.selenium.java"
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  alpine-tests:
    runs-on: ubuntu-latest
    container: "alpine:latest"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Alpine tests
        run: |
          echo "Starting SDK Alpine tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "eyes.selenium.java"
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  specific-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Specific tests
        run: |
          echo "Starting SDK Specific tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "selenium4"
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  images-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn clean install -DskipTests
      - name: SDK Images tests
        run: |
          echo "Starting SDK Images tests."
          echo $APPLITOOLS_REPORT_ID
          chmod +x ./runTests.sh
          ./runTests.sh "eyes.images.java"
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  generic-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ "8", "11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          token: ${{ secrets.SUBMODULES_GA_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: initialize
        run: |
          pushd eyes.ufg.java/src/main/resources
          npm install
          popd
          mvn install -DskipTests
          "export DISPLAY=:99.0"
          "sh -e /etc/init.d/xvfb start"
          sleep 3
          mvn clean install -DskipTests
          chmod +x ./initGeckoDriver.sh && ./initGeckoDriver.sh
          chmod +x ./initChromeDriver.sh && ./initChromeDriver.sh
#          export FIREFOX_DRIVER_PATH=FIXME
#          export CHROME_DRIVER_PATH=FIXME

      - name: SDK Generic tests
        run: |
          echo "Starting SDK Generic tests."
          echo $APPLITOOLS_REPORT_ID
          cd coverage-tests;
          chmod +x ./generic_tests.sh && ./generic_tests.sh
        #          working-directory: java
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  report:
    needs:
      - core-tests
      - appium-tests
      - selenium-tests
      - specific-tests
      - alpine-tests
      - images-tests
      - generic-tests
    runs-on: ubuntu-latest
    steps:
      - name: report
        run: |
          echo "all tests finished successfully."