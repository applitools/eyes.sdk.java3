# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true
      - name: change dir
        run: cd $GITHUB_WORKSPACE
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: cat netrc
        run: cat ~/.netrc
      - name: auth github
        run: echo -e "\n\nmachine github.com\n  login ${{ secrets.GITHUB_TOKEN }}\n" >~/.netrc
      - name: init submodule
        run: git submodule update --init --recursive
      - name: cd to ufg
        run: pushd eyes.ufg.java/src/main/resources
      - name: npm install
        run: npm install
      - name: popd
        run: popd
      - name: mvn install
        run: mvn install -DskipTests
      - name: exit git folder
        run: cd ..
      - name: download codacy
        run: cd .. && curl -L https://github.com/codacy/codacy-analysis-cli/archive/master.tar.gz | tar xvz
      - name: install codacy
        run: cd .. && cd codacy-analysis-cli-* && sudo make install
      - name: run codacy
        run: export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }} && cd .. && codacy-analysis-cli analyze --tool spotbugs --upload --verbose --allow-network --max-allowed-issues 999999 --commit-uuid $GITHUB_SHA --directory $GITHUB_WORKSPACE
